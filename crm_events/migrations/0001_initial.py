# Generated by Django 4.2.11 on 2025-06-28 05:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('job_title', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField()),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('max_capacity', models.IntegerField(blank=True, null=True)),
                ('attendees', models.ManyToManyField(blank=True, help_text='Users who have registered to attend this event.', related_name='attended_events', to=settings.AUTH_USER_MODEL)),
                ('hosts', models.ManyToManyField(blank=True, help_text='Users officially hosting the event.', related_name='hosted_events', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='The user who created and manages this event.', on_delete=django.db.models.deletion.CASCADE, related_name='owned_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='UTMData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utm_source', models.CharField(blank=True, max_length=255, null=True)),
                ('utm_medium', models.CharField(blank=True, max_length=255, null=True)),
                ('utm_campaign', models.CharField(blank=True, max_length=255, null=True)),
                ('utm_term', models.CharField(blank=True, max_length=255, null=True)),
                ('utm_content', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('role_change_type', models.CharField(blank=True, choices=[('host', 'Host'), ('attendee', 'Attendee'), ('unregistered', 'Unregistered')], max_length=20, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utm_data_entries', to='crm_events.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utm_data_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'utm_data',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField(blank=True, null=True)),
                ('filters_applied', models.JSONField(blank=True, null=True)),
                ('recipients', models.JSONField()),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PARTIAL_SUCCESS', 'Partial Success')], max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('num_recipients', models.IntegerField(default=0)),
                ('num_sent_successfully', models.IntegerField(default=0)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='crm_events.event')),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_log',
                'ordering': ['-sent_at'],
            },
        ),
    ]
